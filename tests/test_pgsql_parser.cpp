#define BOOST_TEST_MAIN
#define BOOST_TEST_MODULE PgsqlParserTests

#include <boost/test/unit_test.hpp>
#include <fstream>
#include <parser.h>

namespace bt = boost::unit_test;
using namespace dbproxy;

class logger_stub : public logger
{
  public:
    virtual void out(const std::string &str) override { }
};

boost::uint8_t pgsql_simple_query[] = {
    0x08,0x04,0xFF,0xFF,0xFF,0xD2,0x16,0x2F,0x00,0x00,0x00,0x3F,0x00,0x03,0x00,0x00,0x75,0x73,0x65,0x72,0x00,0x70,0x6F,0x73,0x74,0x67,0x72,0x65,0x73,0x00,0x64,0x61,
    0x74,0x61,0x62,0x61,0x73,0x65,0x00,0x70,0x6F,0x73,0x74,0x67,0x72,0x65,0x73,0x00,0x61,0x70,0x70,0x6C,0x69,0x63,0x61,0x74,0x69,0x6F,0x6E,0x5F,0x6E,0x61,0x6D,0x65,
    0x00,0x70,0x73,0x71,0x6C,0x00,0x00,0x51,0x00,0x00,0x00,0x10,0x53,0x45,0x4C,0x45,0x43,0x54,0x20,0x31,0x2B,0x32,0x3B,0x00,0x58,0x00,0x00,0x00,0x04,
};

BOOST_AUTO_TEST_CASE( ParseSimpleQueryAndReturnTrue )
{
    auto parser = parser_pgsql_simple_query(std::make_shared<logger_stub>());

    parser.process_buffer(pgsql_simple_query, sizeof(pgsql_simple_query));
    auto query = parser.get_last_query();

    BOOST_TEST(!query.compare("SELECT 1+2;"));
}
